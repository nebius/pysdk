name: Release the new version

on:
  push:
    tags:
    - "v*.*.*"
  # workflow_call: # probably not necessary as the release will be triggered by the tag
  workflow_dispatch: # if necessary to rerun the release job

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  pages:
    name: Deploy docs to Github Pages
    environment:
      name: github-pages
      url: ${{ steps.pages_deploy.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[generators]

      - name: Run generation script
        run: |
          make gen-doc

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'docs/generated'

      - name: Deploy to GitHub Pages
        id: pages_deploy
        uses: actions/deploy-pages@v4

  pypi:
    name: Upload release to PyPI
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/nebius
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .
          pip install twine build

      - name: Build a binary wheel and a source tarball
        run: python3 -m build

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  notify-slack-on-failure:
    if: failure()
    needs: [pypi, pages]
    runs-on: ubuntu-latest
    steps:
      - name: Send Slack notification
        env:
          SLACK_OAUTH_TOKEN: ${{ secrets.SLACK_OAUTH_TOKEN }}
          SLACK_CHANNEL: ${{ vars.SLACK_CHANNEL }}
        run: |
          curl -X POST https://slack.com/api/chat.postMessage \
            -H "Authorization: Bearer $SLACK_OAUTH_TOKEN" \
            -H 'Content-type: application/json' \
            --data "{
              \"channel\":\"$SLACK_CHANNEL\",
              \"text\":\"ðŸš¨ Workflow *${{ env.WORKFLOW_NAME }}* failed on \`${{ github.repository }}\`\"
            }"
