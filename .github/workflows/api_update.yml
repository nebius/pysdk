name: Update API and regenerate project

on:
  workflow_dispatch: # Manual trigger
  repository_dispatch: # when triggered remotely
    types:
    - api_published # trigger name
  # push:
  #   paths:
  #   - 'nebius-api'
  #   - 'nebius-api/**'

jobs:
  update-and-commit:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository with submodules
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .[generators]

    - name: Run generation script
      run: |
        make

    - name: Bump version
      run: |
        python src/scripts/version_updater.py ./pyproject.toml patch

    - name: Create or update PR
      id: cpr
      uses: peter-evans/create-pull-request@v7
      with:
        branch: api-auto-update
        title: "Auto-update: API change"
        committer: GitHub <noreply@github.com>
        author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
        commit-message: "Auto-update: API change"
        body: |
          This PR was automatically created by GitHub Actions. It updates the API and regenerates necessary files.
        base: main
        delete-branch: true
        labels: |
            api update
            automated pr

    - name: Auto approve
      if: steps.cpr.outputs.pull-request-operation == 'created'
      run: gh pr review --approve "${{ steps.cpr.outputs.pull-request-number }}"
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Enable Pull Request Automerge
      if: steps.cpr.outputs.pull-request-operation == 'created'
      uses: peter-evans/enable-pull-request-automerge@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}
        merge-method: squash
